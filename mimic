#!/bin/bash

input=${1}
text=${2}

inputBase=$(basename ${input})
inputPath=$(realpath ${input})
inputPath=${inputPath/\/$inputBase/}
tempdir=$(mktemp -d)

# Check for argument
if [[ -z ${input} ]]; then
  echo "Error: no input file given"
  exit 1
fi

# Check for argument
if [[ -z ${text} ]]; then
  echo "Error: no text given"
  exit 1
fi

# Check if input file exists
if [[ ! -f ${input} ]]; then
  echo "Error: input file doesn't exist"
  exit 1
fi

# Parse movie dimensions using ffprobe
dimensionOutput=$(ffprobe -v error -show_entries stream=width,height -of default=noprint_wrappers=1 ${input})

# Check for success
if [[ $? != 0 ]]; then
  echo "Error: trying to parse dimensions using 'ffprobe'"
  exit 1
fi

# Store dimensions in array to parse height and width
dimensions=(${dimensionOutput[@]})
width=${dimensions[0]/width=/}
height=${dimensions[1]/height=/}

# Find "step" (unit) to properly place the transluent bar
heightStep=$((${height} / 17))

# Starting positions for the black box
posX=0
posY=$((${heightStep} * 11))

# Draw using ffmpeg
ffmpeg -y -i ${input} -vf "drawbox=x=${posX}:y=${posY}:w=${width}:h=${heightStep}:color=black@0.5:t=max" -qscale 0 ${tempdir}/${inputBase} &>/dev/null

# Position for the text
posX="$((${width} / 2))-(text_w/2)"
posY="$((${heightStep} * 11 + ${heightStep} / 2 ))-(text_h/2)"

# Draw using ffmpeg
ffmpeg -y -i ${tempdir}/${inputBase} -vf drawtext="fontfile=/System/Library/Fonts/Helvetica.dfont:text='${text}':fontsize=70:fontcolor=white:x=${posX}:y=${posY}" ${inputPath}/new_${inputBase} &>/dev/null

# Remove tempfile
rm -rf ${tempdir}

exit 0
